{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikol\\\\Desktop\\\\Projekti 2022\\\\NWT_projekt\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from './styles';\nimport FileBase from 'react-file-base64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  //creating the state (initializing its properties)\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n\n  const handleSubmit = () => {};\n\n  const clear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: classes.form,\n      onSubmit: \"handleSubmit\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Creating a Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true // the data from the post will be stored in the postData object, and each object has a creator\n        ,\n        value: postData.creator //specifying how to change only one property (creator) of the object\n        //spreading postData is necessary in order to change only 1 property and have others stay the same\n        ,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref => {\n            let {\n              base64\n            } = _ref;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"D+hmjCHH7O9PzRSfZ9NXQuoy7q4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/nikol/Desktop/Projekti 2022/NWT_projekt/client/src/components/Form/Form.js"],"names":["React","useState","TextField","Button","Typography","Paper","useStyles","FileBase","Form","postData","setPostData","creator","title","message","tags","selectedFile","classes","handleSubmit","clear","paper","form","e","target","value","fileInput","base64","buttonSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,KAAxC,QAAqD,mBAArD;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AAACU,IAAAA,OAAO,EAAE,EAAV;AAAcC,IAAAA,KAAK,EAAE,EAArB;AAAyBC,IAAAA,OAAO,EAAE,EAAlC;AAAsCC,IAAAA,IAAI,EAAE,EAA5C;AAAgDC,IAAAA,YAAY,EAAE;AAA9D,GAAD,CAAxC;AACA,QAAMC,OAAO,GAAGV,SAAS,EAAzB;;AAEA,QAAMW,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAGA,QAAMC,KAAK,GAAG,MAAM,CAEnB,CAFD;;AAGA,sBACI,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEF,OAAO,CAACG,KAA1B;AAAA,2BACI;AAAM,MAAA,YAAY,EAAC,KAAnB;AAAyB,MAAA,UAAU,MAAnC;AAAoC,MAAA,SAAS,EAAEH,OAAO,CAACI,IAAvD;AAA6D,MAAA,QAAQ,EAAC,cAAtE;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,SADL;AAEA,QAAA,OAAO,EAAC,UAFR;AAGA,QAAA,KAAK,EAAC,SAHN;AAIA,QAAA,SAAS,MAJT,CAKA;AALA;AAMA,QAAA,KAAK,EAAEX,QAAQ,CAACE,OANhB,CAOA;AACA;AARA;AASA,QAAA,QAAQ,EAAGU,CAAD,IAAOX,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,UAAAA,OAAO,EAAEU,CAAC,CAACC,MAAF,CAASC;AAAjC,SAAD;AAT5B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAaI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,OAAhB;AAAwB,QAAA,OAAO,EAAC,UAAhC;AAA2C,QAAA,KAAK,EAAC,OAAjD;AAAyD,QAAA,SAAS,MAAlE;AAAmE,QAAA,KAAK,EAAEd,QAAQ,CAACG,KAAnF;AAA0F,QAAA,QAAQ,EAAGS,CAAD,IAAOX,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,UAAAA,KAAK,EAAES,CAAC,CAACC,MAAF,CAASC;AAA/B,SAAD;AAAtH;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAC,UAAlC;AAA6C,QAAA,KAAK,EAAC,SAAnD;AAA6D,QAAA,SAAS,MAAtE;AAAuE,QAAA,KAAK,EAAEd,QAAQ,CAACI,OAAvF;AAAgG,QAAA,QAAQ,EAAGQ,CAAD,IAAOX,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeI,UAAAA,OAAO,EAAEQ,CAAC,CAACC,MAAF,CAASC;AAAjC,SAAD;AAA5H;AAAA;AAAA;AAAA;AAAA,cAdJ,eAeI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,MAAhB;AAAuB,QAAA,OAAO,EAAC,UAA/B;AAA0C,QAAA,KAAK,EAAC,MAAhD;AAAuD,QAAA,SAAS,MAAhE;AAAiE,QAAA,KAAK,EAAEd,QAAQ,CAACK,IAAjF;AAAuF,QAAA,QAAQ,EAAGO,CAAD,IAAOX,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeK,UAAAA,IAAI,EAAEO,CAAC,CAACC,MAAF,CAASC;AAA9B,SAAD;AAAnH;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgBI;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACQ,SAAxB;AAAA,+BAAmC,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC,MAAf;AAAsB,UAAA,QAAQ,EAAE,KAAhC;AAAuC,UAAA,MAAM,EAAE;AAAA,gBAAC;AAACC,cAAAA;AAAD,aAAD;AAAA,mBAAcf,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeM,cAAAA,YAAY,EAAEU;AAA7B,aAAD,CAAzB;AAAA;AAA/C;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAiBI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAET,OAAO,CAACU,YAA3B;AAAyC,QAAA,OAAO,EAAC,WAAjD;AAA6D,QAAA,KAAK,EAAC,SAAnE;AAA6E,QAAA,IAAI,EAAC,OAAlF;AAA0F,QAAA,IAAI,EAAC,QAA/F;AAAwG,QAAA,SAAS,MAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAA8C,QAAA,IAAI,EAAC,OAAnD;AAA2D,QAAA,OAAO,EAAER,KAApE;AAA2E,QAAA,SAAS,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAnCD;;GAAMV,I;UAGcF,S;;;KAHdE,I;AAqCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport FileBase from 'react-file-base64';\r\n    \r\n\r\nconst Form = () => {\r\n    //creating the state (initializing its properties)\r\n    const [postData, setPostData] = useState({creator: '', title: '', message: '', tags: '', selectedFile: ''})\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = () => {\r\n\r\n    }\r\n    const clear = () => {\r\n        \r\n    }\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={classes.form} onSubmit=\"handleSubmit\">\r\n                <Typography variant=\"h6\">Creating a Post</Typography>\r\n                <TextField \r\n                name=\"creator\" \r\n                variant=\"outlined\" \r\n                label=\"Creator\" \r\n                fullWidth\r\n                // the data from the post will be stored in the postData object, and each object has a creator\r\n                value={postData.creator}\r\n                //specifying how to change only one property (creator) of the object\r\n                //spreading postData is necessary in order to change only 1 property and have others stay the same\r\n                onChange={(e) => setPostData({ ...postData, creator: e.target.value})}\r\n                />\r\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value})}/>\r\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value})}/>\r\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value})}/>\r\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({ ...postData, selectedFile: base64})}/></div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Post</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper> \r\n    )\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}